---
// This component will render an interactive map using Plotly.js
---

<div id="datacenter-map-container">
  <div id="datacenter-map" style="width: 100%; height: 550px;"></div>
  <div class="map-controls">
    <div class="year-slider-container">
      <label for="year-slider">Year: <span id="current-year">2026</span></label>
      <input type="range" id="year-slider" min="2026" max="2030" value="2026" step="1">
    </div>
  </div>
</div>

<script>
  // Load Plotly and initialize the map
  import('https://cdn.plot.ly/plotly-2.26.0.min.js').then(() => {
    initializeDataCenterMap();
  });

  async function initializeDataCenterMap() {
    // Load the data
    const response = await fetch('/data/datacenter-predictions.json');
    const datacenterData = await response.json();
    
    const years = Object.keys(datacenterData).sort();
    const states = Object.keys(datacenterData[years[0]]);
    
    // Create state abbreviation mapping for Plotly
    const stateAbbreviations = {
      'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR',
      'California': 'CA', 'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE',
      'District of Columbia': 'DC', 'Florida': 'FL', 'Georgia': 'GA', 'Hawaii': 'HI',
      'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',
      'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME',
      'Maryland': 'MD', 'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN',
      'Mississippi': 'MS', 'Missouri': 'MO', 'Montana': 'MT', 'Nebraska': 'NE',
      'Nevada': 'NV', 'New Hampshire': 'NH', 'New Jersey': 'NJ', 'New Mexico': 'NM',
      'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH',
      'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI',
      'South Carolina': 'SC', 'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX',
      'Utah': 'UT', 'Vermont': 'VT', 'Virginia': 'VA', 'Washington': 'WA',
      'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY'
    };

    function createMapData(year) {
      const yearData = datacenterData[year];
      
      // Calculate total US data centers for this year
      const totalDataCenters = Object.values(yearData).reduce((sum, count) => sum + count, 0);
      
      // Calculate proportions as percentages
      const proportions = states.map(state => (yearData[state] / totalDataCenters) * 100);
      const locations = states.map(state => stateAbbreviations[state]);
      const hovertext = states.map(state => {
        const count = yearData[state];
        const percentage = ((count / totalDataCenters) * 100).toFixed(1);
        return `${state}<br>Data Centers: ${count}<br>Share of US Total: ${percentage}%<br>Year: ${year}`;
      });

      return [{
        type: 'choropleth',
        locationmode: 'USA-states',
        locations: locations,
        z: proportions,
        text: hovertext,
        hovertemplate: '%{text}<extra></extra>',
        colorscale: [
          [0, '#ffffff'],      // White for lowest values
          [0.2, '#f0f9f0'],    // Very light green
          [0.4, '#c7e9c7'],    // Light green
          [0.6, '#74c476'],    // Medium green
          [0.8, '#31a354'],    // Dark green
          [1, '#21752F']       // Darkest green (matching your brand)
        ],
        colorbar: {
          title: {
            text: '% of US Total',
            font: { size: 14 }
          },
          orientation: 'h',
          x: 0.5,
          xanchor: 'center',
          y: 1.05,
          thickness: 15,
          len: 0.8,
          ticksuffix: '%'
        }
      }];
    }

    const layout = {
      geo: {
        scope: 'usa',
        projection: { type: 'albers usa' },
        showlakes: true,
        lakecolor: 'rgb(255, 255, 255)',
        domain: { x: [0, 1], y: [0, 1] }
      },
      margin: { t: 50, r: 20, b: 20, l: 20 },
      font: { family: 'Inter, system-ui, sans-serif' },
      paper_bgcolor: 'rgba(0,0,0,0)',
      plot_bgcolor: 'rgba(0,0,0,0)'
    };

    const config = {
      responsive: true,
      displayModeBar: false,
      scrollZoom: false,
      doubleClick: false,
      staticPlot: false
    };

    // Initial render
    let currentYear = '2026';
    Plotly.newPlot('datacenter-map', createMapData(currentYear), layout, config);

    // Year slider functionality
    const yearSlider = document.getElementById('year-slider');
    const currentYearLabel = document.getElementById('current-year');

    yearSlider.addEventListener('input', function(e) {
      currentYear = e.target.value;
      currentYearLabel.textContent = currentYear;
      
      // Update the map data
      const newData = createMapData(currentYear);
      Plotly.restyle('datacenter-map', {
        z: [newData[0].z],
        text: [newData[0].text]
      });
    });
  }
</script>

<style>
  #datacenter-map-container {
    margin: 40px 0;
  }

  .map-controls {
    margin-top: 20px;
    text-align: center;
  }

  .year-slider-container {
    display: inline-block;
  }

  .year-slider-container label {
    display: block;
    margin-bottom: 10px;
    font-weight: 500;
    color: #1a1a1a;
    font-size: 16px;
  }

  #current-year {
    font-weight: 600;
    color: #21752F;
  }

  #year-slider {
    width: 300px;
    height: 6px;
    border-radius: 3px;
    background: #ddd;
    outline: none;
    -webkit-appearance: none;
  }

  #year-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: #21752F;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  }

  #year-slider::-moz-range-thumb {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: #21752F;
    cursor: pointer;
    border: none;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  }

  @media (max-width: 768px) {
    #datacenter-map {
      height: 400px !important;
    }
    
    #year-slider {
      width: 250px;
    }
  }
</style> 